<Layout>
    <Header Class="header app-header">
        <Menu Theme="MenuTheme.Dark" Mode="MenuMode.Horizontal" DefaultSelectedKeys=@(new[] { $"{_menuActive}" })>

            @foreach (var menu in _menus)
            {
                <MenuItem Class="app-header-item" Key="@($"{menu.Key}")"
                          OnClick="@(_ => _menuActive = menu.Key)">
                    @menu.Title
                </MenuItem>
            }

        </Menu>
    </Header>

    @switch (_menuActive)
    {
        case MenuBar.JoyWatcher:
            <JoyWatcherPage/>
            break;
        case MenuBar.MidiConfig:
            <MidiConfigPage/>
            break;
        default:
            throw new ArgumentOutOfRangeException();
    }

    <Footer Class="app-footer">
        <JoyStatusPage/>
    </Footer>
</Layout>

<AntContainer/>

<style>
    .app-header {
        z-index: 1;
        position: fixed;
        width: 100%;
        height: @(HeaderHeight)px;
        padding: 0 @(ContentPadding)px;
    }

    .app-header-item {
        min-width: @(MenuWidth - ContentPadding - 1)px;
        font-size: 120%;
        text-align: center;
    }

    .app-footer {
        z-index: 1;
        position: fixed;
        bottom: 0;
        width: 100%;
        height: @(FooterHeight)px;
        padding: 0;
    }

    .app-layout {
        padding: @(HeaderHeight)px 0 @(FooterHeight)px;
    }

    .app-menu {
        width: @(MenuWidth)px;
        height: calc(100vh - @(HeaderHeight)px - @(FooterHeight)px);
        overflow: auto;
        position: fixed;
        direction: rtl;
    }

    .app-menu-item {
        /* the width must be 1px less than container */
        /* more padding to avoid overflow when scrollbar appears */
        width: @(MenuWidth - ContentPadding)px !important;
        direction: ltr;
    }

    .app-content {
        padding: @(ContentPadding)px /* top */
        @(ContentPadding)px /* right */
        @(ContentPadding)px /* bottom */
        @(ContentPadding + MenuWidth)px; /* left */
    }

    .app-content-item {
        background: #fff;
        padding: @(ContentPadding)px;
    }

    .app-content-mask {
        height: calc(100vh - @(HeaderHeight)px - @(FooterHeight)px - 4 * @(ContentPadding)px);
    }
</style>

@code {

    enum MenuBar
    {
        JoyWatcher,
        MidiConfig,
    }

    struct Menu
    {
        public MenuBar Key { get; init; }
        public string Title { get; init; }
    }

    private readonly Menu[] _menus =
    [
        new Menu { Key = MenuBar.MidiConfig, Title = "MIDI Key Bindings" },
        new Menu { Key = MenuBar.JoyWatcher, Title = "Joysticks Watcher" },
    ];

    private MenuBar _menuActive = MenuBar.MidiConfig;

    // Style Constants
    private const int HeaderHeight = 64;
    private const int FooterHeight = 48;
    private const int MenuWidth = 200;
    private const int ContentPadding = 24;
}